"use strict";(self.webpackChunkneonwp=self.webpackChunkneonwp||[]).push([[2618],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(k,i(i({ref:n},c),{},{components:t})):a.createElement(k,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5944:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:5,title:"\u4e0eSPL\u4ee3\u5e01\u4ea4\u4e92 (Interacting with SPL Tokens)"},p=void 0,l={unversionedId:"05Developing/03Deploying dApps/05Interacting with SPL Tokens",id:"05Developing/03Deploying dApps/05Interacting with SPL Tokens",title:"\u4e0eSPL\u4ee3\u5e01\u4ea4\u4e92 (Interacting with SPL Tokens)",description:"The ERC-20 SPL-Wrapper contract provides an access to native Solana tokens, registered in the SPL-token contract, through the ERC-20 interface.",source:"@site/docs/05Developing/03Deploying dApps/05Interacting with SPL Tokens.md",sourceDirName:"05Developing/03Deploying dApps",slug:"/05Developing/03Deploying dApps/05Interacting with SPL Tokens",permalink:"/neonwp/05Developing/03Deploying dApps/05Interacting with SPL Tokens",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05Developing/03Deploying dApps/05Interacting with SPL Tokens.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"\u4e0eSPL\u4ee3\u5e01\u4ea4\u4e92 (Interacting with SPL Tokens)"},sidebar:"tutorialSidebar",previous:{title:"\u5411Neon EVM\u8fc1\u79fbdApps (Migrating dApps to the Neon EVM)",permalink:"/neonwp/05Developing/03Deploying dApps/04Migrating dApps to the Neon EVM"},next:{title:"\u4f7f\u7528ERC-20\u4ee3\u5e01 (Using ERC-20 Tokens)",permalink:"/neonwp/05Developing/03Deploying dApps/06Using ERC20 Tokens"}},c={},d=[{value:"\u5408\u7ea6\u63a5\u53e3(Contract interface)",id:"\u5408\u7ea6\u63a5\u53e3contract-interface",level:4},{value:"\u9650\u5236(Restrictions)",id:"\u9650\u5236restrictions",level:4},{value:"\u627e\u5230\u4ee3\u5e01\u8d26\u6237\u5730\u5740(Finding the Token Account address)",id:"\u627e\u5230\u4ee3\u5e01\u8d26\u6237\u5730\u5740finding-the-token-account-address",level:4},{value:"\u521b\u5efa\u4ee3\u5e01\u8d26\u6237 (Creating the Token Account)",id:"\u521b\u5efa\u4ee3\u5e01\u8d26\u6237-creating-the-token-account",level:3}],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ERC-20 SPL-Wrapper contract provides an access to native Solana tokens, registered in the SPL-token contract, through the ERC-20 interface."),(0,o.kt)("p",null,"ERC-20 SPL\u5c01\u88c5\u5668\u5408\u7ea6\u901a\u8fc7 ERC-20 \u63a5\u53e3\u63d0\u4f9b\u8bbf\u95ee\u5728 SPL-token \u5408\u7ea6\u4e2d\u6ce8\u518c\u7684\u539f\u751f Solana \u4ee3\u5e01\u7684\u5165\u53e3\u3002"),(0,o.kt)("p",null,"This allows interaction of the Solana applications with EVM(Solidity/Vyper/etc.) bytecode contracts. ERC-20 SPL-Wrapper can also be used to transfer funds in Solana tokens using Ethereum wallets such as Metamask."),(0,o.kt)("p",null,"\u8fd9\u4f7f\u5f97 Solana \u5e94\u7528\u7a0b\u5e8f\u4e0e EVM(Solidity/Vyper/\u7b49)\u5b57\u8282\u7801\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\u3002ERC-20 SPL\u5c01\u88c5\u5668\u8fd8\u80fd\u7528\u4e8e\u5e2e\u52a9Metamask \u7b49\u4ee5\u592a\u574a\u94b1\u5305\u4ee5 Solana \u4ee3\u5e01\u8f6c\u79fb\u8d44\u91d1\u3002"),(0,o.kt)("p",null,"Contract is implemented in Rust as part of Neon EVM program."),(0,o.kt)("p",null,"\u4f5c\u4e3a Neon EVM \u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0cContract \u5728 Rust \u4e2d\u5b9e\u73b0\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Source codes:"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"\u6e90\u4ee3\u7801\uff1a")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/neonlabsorg/neon-evm/blob/c43345d7abf7af14aa840e6b15c0fc64b084bb2c/evm_loader/program/src/precompile_contracts.rs#L106"},"Rust source code")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/neonlabsorg/neon-evm/blob/develop/evm_loader/SPL_ERC20_Wrapper.sol"},"Solidity wrapper source code")),(0,o.kt)("h4",{id:"\u5408\u7ea6\u63a5\u53e3contract-interface"},"\u5408\u7ea6\u63a5\u53e3(Contract interface)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"interface IERC20 {\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function allowance(address ow ERC-20 SPL-Wrapperer, address spender) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    function approveSolana(bytes32 spender, uint64 value) external returns (bool);\n    event ApprovalSolana(address indexed owner, bytes32 indexed spender, uint64 value);\n}\n")),(0,o.kt)("p",null,"Functionality of interface modules:",(0,o.kt)("br",{parentName:"p"}),"\n","\u63a5\u53e3\u5404\u6a21\u5757\u529f\u80fd\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"decimals() ---")," Returns the number of decimals used to get its user representation. For example, if ",(0,o.kt)("inlineCode",{parentName:"p"},"decimals")," equals 2, a balance of 505 tokens should be displayed to a user as 5,05 (505 / 10 ","*"," 2).",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"\u5c0f\u6570\u4f4d() ---")," \u8fd4\u56de\u7528\u4e8e\u83b7\u53d6\u5176\u7528\u6237\u4ee3\u8868\u6027\u7684\u5c0f\u6570\u4f4d\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5c0f\u6570\u7b49\u4e8e 2\uff0c\u5219\u5e94\u5411\u7528\u6237\u663e\u793a 505 \u4e2a\u4ee3\u5e01\u7684\u4f59\u989d\u4e3a 5,05 (505 / 10 ","*"," 2)\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"totalSupply() ---")," Returns the amount of tokens in existence.\n",(0,o.kt)("inlineCode",{parentName:"p"},"\u603b\u4f9b\u7ed9() ---")," \u8fd4\u56de\u4ee3\u5e01\u5b58\u5728\u603b\u91cf\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"balanceOf(address account) ---")," Returns the amount of tokens owned by the ",(0,o.kt)("inlineCode",{parentName:"p"},"account"),".\n",(0,o.kt)("inlineCode",{parentName:"p"},"\u4f59\u989d(\u5730\u5740\u8d26\u6237) ---")," \u8fd4\u56de",(0,o.kt)("inlineCode",{parentName:"p"},"\u8d26\u6237"),"\u62e5\u6709\u7684\u4ee3\u5e01\u6570\u91cf\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"allowance(address owner, address spender) ---")," Returns the remaining number of tokens that a ",(0,o.kt)("inlineCode",{parentName:"p"},"spender")," will be allowed to spend on behalf of the ",(0,o.kt)("inlineCode",{parentName:"p"},"owner")," through ",(0,o.kt)("inlineCode",{parentName:"p"},"transferFrom"),". This is zero by default.",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"\u6d25\u8d34(\u5730\u5740\u6240\u6709\u8005\uff0c\u5730\u5740\u82b1\u8d39\u8005) ---")," \u8fd4\u56de\u5141\u8bb8",(0,o.kt)("inlineCode",{parentName:"p"},"\u82b1\u8d39\u8005"),"\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"\u8f6c\u8d26 (transferFrom)")," \u4ee3\u8868",(0,o.kt)("inlineCode",{parentName:"p"},"\u62e5\u6709\u8005"),"\u82b1\u8d39\u7684\u5269\u4f59\u4ee3\u5e01\u6570\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u96f6\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"transfer(address recipient, uint256 amount) ---")," Sends the specified ",(0,o.kt)("inlineCode",{parentName:"p"},"amount")," of tokens from the caller's account balance to the recipient's account balance.",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"\u8f6c\u53d1\u8005(\u5730\u5740\u56de\u6267, 256\u5355\u4f4d\u6570\u91cf) ---")," \u5c06\u6307\u5b9a",(0,o.kt)("inlineCode",{parentName:"p"},"\u6570\u91cf"),"\u7684\u4ee3\u5e01\u4ece\u8c03\u7528\u8005\u7684\u5e10\u6237\u4f59\u989d\u53d1\u9001\u5230\u63a5\u6536\u8005\u7684\u5e10\u6237\u4f59\u989d\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"approve(address spender, uint256 amount) ---")," Sets an ",(0,o.kt)("inlineCode",{parentName:"p"},"amount")," as the spender's allowance over the caller's tokens.",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"\u540c\u610f\u91d1\u989d(\u5730\u5740\u82b1\u8d39\u8005, 256\u5355\u4f4d\u6570\u91cf) ---")," \u5c06\u91d1\u989d\u8bbe\u7f6e\u4e3a\u82b1\u8d39\u8005\u5bf9\u8c03\u7528\u8005\u4ee3\u5e01\u7684\u6d25\u8d34\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"transferFrom(address sender, address recipient, uint256 amount) ---")," Transfer the amount of tokens from the ",(0,o.kt)("inlineCode",{parentName:"p"},"sender")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"recipient"),".",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"\u8f6c\u8d26(\u5730\u5740\u6240\u6709\u8005, \u5730\u5740\u56de\u6267, uint256\u6570\u91cf) ---")," \u5c06\u4ee3\u5e01\u6570\u989d\u4ece\u53d1\u9001\u8005\u8f6c\u79fb\u5230\u6536\u4ef6\u4eba\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"approveSolana(bytes32 spender, uint64 value) ---")," Allows Solana user ",(0,o.kt)("inlineCode",{parentName:"p"},"spender")," to withdraw from the caller's account multiple times, up to the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," amount. Only one Solana ",(0,o.kt)("inlineCode",{parentName:"p"},"spender")," can exists at the time. Translates into spl-token ",(0,o.kt)("inlineCode",{parentName:"p"},"Approve")," instruction.",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"Solana\u540c\u610f\u91d1\u989d(32\u5b57\u8282\u82b1\u8d39\u8005, uint64\u503c) ---")," \u5141\u8bb8 Solana \u7528\u6237",(0,o.kt)("inlineCode",{parentName:"p"},"\u82b1\u8d39\u8005"),"\u591a\u6b21\u4ece\u8c03\u7528\u8005\u7684\u8d26\u6237\u4e2d\u63d0\u6b3e\uff0c\u6700\u9ad8\u53ef\u8fbe",(0,o.kt)("inlineCode",{parentName:"p"},"\u4ef7\u503c "),"\u8bbe\u7f6e\u7684\u91d1\u989d\u3002\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a Solana ",(0,o.kt)("inlineCode",{parentName:"p"},"\u6d88\u8d39\u8005"),"\u3002\u7ffb\u8bd1\u6210 spl-token ",(0,o.kt)("inlineCode",{parentName:"p"},"\u6279\u51c6"),"\u6307\u4ee4\u3002"))),(0,o.kt)("h4",{id:"\u9650\u5236restrictions"},"\u9650\u5236(Restrictions)"),(0,o.kt)("p",null,"According to SPL token structure, u64 is used to store the balance (In ERC-20 it's u256). Based on u64, maximum balance and transfer amounts are restricted by (2\\^64-1)/(10\\^9) (for 9 decimals accuracy)."),(0,o.kt)("p",null,"\u6839\u636e SPL \u4ee3\u5e01\u7ed3\u6784\uff0cu64 \u7528\u4e8e\u5b58\u50a8\u4f59\u989d(\u5728 ERC-20 \u4e2d\u4e3a u256)\u3002\u57fa\u4e8e u64\uff0c\u6700\u5927\u4f59\u989d\u548c\u8f6c\u8d26\u91d1\u989d\u53d7 (2\\^64-1)/(10\\^9) \u9650\u5236(\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e 9 \u4f4d)\u3002"),(0,o.kt)("h4",{id:"\u627e\u5230\u4ee3\u5e01\u8d26\u6237\u5730\u5740finding-the-token-account-address"},"\u627e\u5230\u4ee3\u5e01\u8d26\u6237\u5730\u5740(Finding the Token Account address)"),(0,o.kt)("p",null,"Token account for a given wallet address is a program-derived account consisting of three constants, the Ethereum wallet address itself, ERC-20 contract address, and the token mint."),(0,o.kt)("p",null,"\u7ed9\u5b9a\u94b1\u5305\u5730\u5740\u7684\u4ee3\u5e01\u8d26\u6237\u662f\u4e00\u4e2a\u7531\u7a0b\u5e8f\u6d3e\u751f\u7684\u8d26\u6237\uff0c\u7531\u4e09\u4e2a\u5e38\u91cf\u7ec4\u6210\uff0c\u5373\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740\u672c\u8eab\u3001ERC-20 \u5408\u7ea6\u5730\u5740\u548c\u4ee3\u5e01\u94f8\u5e01\u5382\u3002"),(0,o.kt)("p",null,"The account address can be derived in Rust with:"),(0,o.kt)("p",null,"\u8d26\u6237\u5730\u5740\u53ef\u4ee5\u4eceRust\u4e2d\u4ea7\u751f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'const ACCOUNT_SEED_VERSION: u8 = 1;\n\nfn token_address(owner: &H160, contract: &H160, mint: &Pubkey, neon_evm: &Pubkey) {\n    let seeds: &[&[u8]] = &[&[ACCOUNT_SEED_VERSION], b"ERC20Balance", &mint.to_bytes(), contract.as_bytes(), owner.as_bytes()];\n    Pubkey::find_program_address(seeds, neon_evm)\n}\n')),(0,o.kt)("h3",{id:"\u521b\u5efa\u4ee3\u5e01\u8d26\u6237-creating-the-token-account"},"\u521b\u5efa\u4ee3\u5e01\u8d26\u6237 (Creating the Token Account)"),(0,o.kt)("p",null,"Accounts hold token balances and are created using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20CreateTokenAccount"),"\xa0instruction."),(0,o.kt)("p",null,"\u8d26\u6237\u6301\u6709\u4ee3\u5e01\u4f59\u989d\uff0c\u5e76\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20CreateTokenAccount")," \u6307\u4ee4\u521b\u5efa\u3002"),(0,o.kt)("p",null,"This instruction can be created in Rust with:",(0,o.kt)("br",{parentName:"p"}),"\n","\u8fd9\u6761\u6307\u4ee4\u53ef\u4ee5\u5728 Rust \u4e2d\u521b\u5efa\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"fn create_token_account(funding: Pubkey, owner: H160, contract: H160, mint: Pubkey, neon_evm: Pubkey) {\n    let (token_address, _) = token_address(&owner, &contract, &mint, &neon_evm);\n    let (wallet_address, _) = Pubkey::find_program_address(&[&[ACCOUNT_SEED_VERSION], owner.as_bytes()], &neon_evm);\n    let (contract_address, _) = Pubkey::find_program_address(&[&[ACCOUNT_SEED_VERSION], contract.as_bytes()], &neon_evm);\n\n    Instruction::new_with_bincode(\n        neon_evm,\n        &(15_u8),\n        vec![\n            AccountMeta::new(funding, true),\n            AccountMeta::new(token_address, false),\n            AccountMeta::new_readonly(wallet_address, false),\n            AccountMeta::new_readonly(contract_address, false),\n            AccountMeta::new_readonly(mint, false),\n            AccountMeta::new_readonly(system_program::id(), false),\n            AccountMeta::new_readonly(spl_token::id(), false),\n            AccountMeta::new_readonly(sysvar::rent::id(), false)\n        ]\n    )\n}\n")))}m.isMDXComponent=!0}}]);